{"ast":null,"code":"var _jsxFileName = \"/Users/ashanti/Desktop/expenseTracker/src/components/Expenses/ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = props => {\n  const chartDataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  console.log(props.expense);\n\n  for (const expense in props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","ExpensesChart","props","chartDataPoints","label","value","console","log","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["/Users/ashanti/Desktop/expenseTracker/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n\tconst chartDataPoints = [\n\t\t{ label: \"Jan\", value: 0 },\n\t\t{ label: \"Feb\", value: 0 },\n\t\t{ label: \"Mar\", value: 0 },\n\t\t{ label: \"Apr\", value: 0 },\n\t\t{ label: \"May\", value: 0 },\n\t\t{ label: \"Jun\", value: 0 },\n\t\t{ label: \"Jul\", value: 0 },\n\t\t{ label: \"Aug\", value: 0 },\n\t\t{ label: \"Sep\", value: 0 },\n\t\t{ label: \"Oct\", value: 0 },\n\t\t{ label: \"Nov\", value: 0 },\n\t\t{ label: \"Dec\", value: 0 },\n\t];\n\tconsole.log(props.expense);\n\tfor (const expense in props.expenses) {\n\t\tconst expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\n\t}\n\n\treturn <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAChC,MAAMC,eAAe,GAAG,CACvB;IAAEC,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CADuB,EAEvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAFuB,EAGvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAHuB,EAIvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAJuB,EAKvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CALuB,EAMvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CANuB,EAOvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAPuB,EAQvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CARuB,EASvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CATuB,EAUvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAVuB,EAWvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAXuB,EAYvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAZuB,CAAxB;EAcAC,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,OAAlB;;EACA,KAAK,MAAMA,OAAX,IAAsBN,KAAK,CAACO,QAA5B,EAAsC;IACrC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB,CADqC,CACS;;IAC9CT,eAAe,CAACO,YAAD,CAAf,CAA8BL,KAA9B,IAAuCG,OAAO,CAACK,MAA/C;EACA;;EAED,oBAAO,QAAC,KAAD;IAAO,UAAU,EAAEV;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACA,CAtBD;;KAAMF,a;AAwBN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}