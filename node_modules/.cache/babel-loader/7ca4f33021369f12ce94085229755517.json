{"ast":null,"code":"var _jsxFileName = \"/Users/ashanti/Desktop/expenseTracker/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [enteredTitle, setEnterdTitle] = useState(\"\");\n  const [enteredAmount, setEnterdAmount] = useState(\"\");\n  const [enteredDate, setEnterdDate] = useState(\"\"); //  This is a way to only use useState once to change multiple state changes\n  // const [userInput, setUserInput] = useState({\n  // \tenterdTitle: \"\",\n  // \tenterdAmount: \"\",\n  // \tenterdDate: \"\",\n  // });\n\n  const titleChangeHandler = event => {\n    // The comments are 2 ways you can update state. The second version can cause issues in some cases so the third is a more reliable why to insure you get the most accurate state.\n    setEnterdTitle(event.target.value); // setUserInput({\n    // \t...userInput,\n    // \tenterdTitle: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    // \treturn { ...prevState, enterdTitle: event.target.value };\n    // });\n  };\n\n  const amountChandeHandler = event => {\n    setEnterdAmount(event.target.value); // setUserInput({\n    // \t...userInput,\n    // \tenterdAmount: event.target.value,\n    // });\n\n    console.log(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnterdDate(event.target.value); // setUserInput({\n    // \t...userInput,\n    // \tenterdDate: event.target.value,\n    // });\n\n    console.log(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnterdTitle(\"\");\n    setEnterdAmount(\"\");\n    setEnterdDate(\"\");\n  };\n\n  const cancelHandled = () => {\n    props.click(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          value: enteredAmount,\n          onChange: amountChandeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          step: \"2022-12-31\",\n          value: enteredDate,\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelHandled,\n        type: \"button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ExpenseForm, \"PyT3emOiX5i1kuGQVcoO7BgdDpU=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","props","enteredTitle","setEnterdTitle","enteredAmount","setEnterdAmount","enteredDate","setEnterdDate","titleChangeHandler","event","target","value","amountChandeHandler","console","log","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","cancelHandled","click"],"sources":["/Users/ashanti/Desktop/expenseTracker/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n\tconst [enteredTitle, setEnterdTitle] = useState(\"\");\n\tconst [enteredAmount, setEnterdAmount] = useState(\"\");\n\tconst [enteredDate, setEnterdDate] = useState(\"\");\n\n\t//  This is a way to only use useState once to change multiple state changes\n\n\t// const [userInput, setUserInput] = useState({\n\t// \tenterdTitle: \"\",\n\t// \tenterdAmount: \"\",\n\t// \tenterdDate: \"\",\n\t// });\n\n\tconst titleChangeHandler = (event) => {\n\t\t// The comments are 2 ways you can update state. The second version can cause issues in some cases so the third is a more reliable why to insure you get the most accurate state.\n\n\t\tsetEnterdTitle(event.target.value);\n\n\t\t// setUserInput({\n\t\t// \t...userInput,\n\t\t// \tenterdTitle: event.target.value,\n\t\t// });\n\n\t\t// setUserInput((prevState) => {\n\t\t// \treturn { ...prevState, enterdTitle: event.target.value };\n\t\t// });\n\t};\n\n\tconst amountChandeHandler = (event) => {\n\t\tsetEnterdAmount(event.target.value);\n\n\t\t// setUserInput({\n\t\t// \t...userInput,\n\t\t// \tenterdAmount: event.target.value,\n\t\t// });\n\t\tconsole.log(event.target.value);\n\t};\n\n\tconst dateChangeHandler = (event) => {\n\t\tsetEnterdDate(event.target.value);\n\t\t// setUserInput({\n\t\t// \t...userInput,\n\t\t// \tenterdDate: event.target.value,\n\t\t// });\n\t\tconsole.log(event.target.value);\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst expenseData = {\n\t\t\ttitle: enteredTitle,\n\t\t\tamount: enteredAmount,\n\t\t\tdate: new Date(enteredDate),\n\t\t};\n\n\t\tprops.onSaveExpenseData(expenseData);\n\t\tsetEnterdTitle(\"\");\n\t\tsetEnterdAmount(\"\");\n\t\tsetEnterdDate(\"\");\n\t};\n\n\tconst cancelHandled = () => {\n\t\tprops.click(false);\n\t};\n\n\treturn (\n\t\t<form onSubmit={submitHandler}>\n\t\t\t<div className=\"new-expense__controls\">\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={enteredTitle}\n\t\t\t\t\t\tonChange={titleChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label>Amount</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"0.01\"\n\t\t\t\t\t\tstep=\"0.01\"\n\t\t\t\t\t\tvalue={enteredAmount}\n\t\t\t\t\t\tonChange={amountChandeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label>Date</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tmin=\"2019-01-01\"\n\t\t\t\t\t\tstep=\"2022-12-31\"\n\t\t\t\t\t\tvalue={enteredDate}\n\t\t\t\t\t\tonChange={dateChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"new-expense__actions\">\n\t\t\t\t<button onClick={cancelHandled} type=\"button\">\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\n\t\t\t\t<button type=\"submit\">Add Expense</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default ExpenseForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}